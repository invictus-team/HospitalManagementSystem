/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital_Admission;

import com.mysql.jdbc.Statement;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wolf
 */
public class Doctor_UpdateRegistration extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form UpdateRegistration
     */
    public Doctor_UpdateRegistration() {
        initComponents();
        
        
        this.setVisible(true);
        this.setResizable(false);
        setLocationRelativeTo(null);
        this.setTitle("UpdateRegistration");
        tf.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        department = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        patienttable = new javax.swing.JTable();
        search = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sex = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        dob = new javax.swing.JTextField();
        cellphone = new javax.swing.JTextField();
        department1 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        doa = new javax.swing.JTextField();
        doctor = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        namesearch = new javax.swing.JComboBox();
        tf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        department.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        department.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SelectDepartment", "orthopedics", "pediatric", "dermatology" }));
        department.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                departmentItemStateChanged(evt);
            }
        });
        getContentPane().add(department, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 55, 141, -1));

        patienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "IDCard", "Name"
            }
        ));
        jScrollPane1.setViewportView(patienttable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 230, 93));

        search.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 277, -1, -1));

        jLabel6.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 51, 0));
        jLabel6.setText("CellPhoneNumber:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 210, -1, 20));

        jLabel4.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 51, 0));
        jLabel4.setText("Age:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, 20));

        jLabel5.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 51, 0));
        jLabel5.setText("DateOfBirth:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, 20));

        sex.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        sex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        getContentPane().add(sex, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 51, 0));
        jLabel3.setText("Name:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, -1, 20));

        jLabel9.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 51, 0));
        jLabel9.setText("DateOfAdmmision:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, -1, 20));

        jLabel7.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 51, 0));
        jLabel7.setText("Department:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, -1, 20));

        jLabel10.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 51, 0));
        jLabel10.setText("Doctor:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, -1, 20));

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
        });
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 91, 200, -1));
        getContentPane().add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 130, 86, -1));
        getContentPane().add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 169, 200, -1));
        getContentPane().add(cellphone, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 208, 200, -1));

        department1.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        department1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "orthopedics", "pediatric", "dermatology" }));
        department1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                department1ActionPerformed(evt);
            }
        });
        getContentPane().add(department1, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 247, 119, -1));

        jLabel11.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 51));
        jLabel11.setText("Sex:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, -1, -1));
        getContentPane().add(doa, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 286, 200, -1));

        doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorActionPerformed(evt);
            }
        });
        getContentPane().add(doctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(394, 326, 200, -1));

        update.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 325, -1, -1));

        delete.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 366, -1, -1));

        namesearch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                namesearchItemStateChanged(evt);
            }
        });
        namesearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                namesearchFocusLost(evt);
            }
        });
        getContentPane().add(namesearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 200, -1));
        getContentPane().add(tf, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, -1));

        jLabel2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 204));
        jLabel2.setText("Tips:1.Select a department ↑");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, -1, -1));

        jLabel8.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 204, 204));
        jLabel8.setText("2.Then You will get many rows in the table ↓");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, -1, -1));

        jLabel12.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 204, 204));
        jLabel12.setText("3.Select one row then click search button ");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, -1, -1));

        jLabel13.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel13.setText("4.You can update any values on the right side,click Update button");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, -1, -1));

        jLabel14.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel14.setText("5.You can delete any row if you select it and click Delete button");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, -1, -1));

        jLabel15.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 204, 204));
        jLabel15.setText("AdditonTip: You can insert something in you name ");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, 10));

        jLabel16.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 204, 204));
        jLabel16.setText("And you will get some item in the combo box to select you will get full name");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, -1, -1));

        jButton1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, -1, -1));

        jLabel1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/desk3.jpg"))); // NOI18N
        jLabel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void departmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_departmentItemStateChanged
        patienttable.removeAll();
        String item=evt.getItem().toString();
        try{
        if(item.equals("orthopedics"))
        {
            patienttable.removeAll();
            Connection con=DBClass.getConnection();
            String str="select * from patient where department='orthopedics'";
            Statement st=(Statement) con.createStatement();
            ResultSet rs=st.executeQuery(str);
            DefaultTableModel tm=(DefaultTableModel) patienttable.getModel();
            tm.setRowCount(0);
            while(rs.next())
            { 
                String[] a=new String[2];
                for(int s=0;s<2;s++)
                {
                    a[s]=rs.getString(s+1);
                }
                tm.addRow(a);
            }
            tm.fireTableDataChanged();
        }
        else if(item.equals("pediatric"))
        {
            patienttable.removeAll();
            Connection con=DBClass.getConnection();
            String str="select * from patient where department='pediatric'";
            Statement st=(Statement) con.createStatement();
            ResultSet rs=st.executeQuery(str);
            DefaultTableModel tm=(DefaultTableModel) patienttable.getModel();
            tm.setRowCount(0);
            while(rs.next())
            { 
                String[] a=new String[2];
                for(int s=0;s<2;s++)
                {
                    a[s]=rs.getString(s+1);
                }
                tm.addRow(a);
            }
            tm.fireTableDataChanged();
        }
        else if(item.equals("dermatology"))
        {
            patienttable.removeAll();
            Connection con=DBClass.getConnection();
            
            String str="select * from patient where department='dermatology'";
            Statement st=(Statement) con.createStatement();
            ResultSet rs=st.executeQuery(str);
            DefaultTableModel tm=(DefaultTableModel) patienttable.getModel();
            tm.setRowCount(0);
            while(rs.next())
            { 
                String[] a=new String[2];
                for(int s=0;s<2;s++)
                {
                    a[s]=rs.getString(s+1);
                }
                tm.addRow(a);
            }
            tm.fireTableDataChanged();
        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_departmentItemStateChanged

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        
        try
        {
            int rownum=patienttable.getSelectedRow();        
            String id=patienttable.getValueAt(rownum, 0).toString();
            String str="select * from patient where idcard='"+id+"'";
            Connection con=DBClass.getConnection();
         
            Statement st=(Statement) con.createStatement();
            ResultSet rs=st.executeQuery(str);
            while(rs.next())
            {
    
                name.setText(rs.getString(2));
                age.setText(String.valueOf(rs.getInt(3)));
                if(rs.getString(4).equals("Male"))
                    sex.setSelectedIndex(0);
                else
                    sex.setSelectedIndex(1);
                dob.setText(rs.getString(5));
                cellphone.setText(rs.getString(6));
                if(rs.getString(7).equals("orthopedics"))
                    department1.setSelectedIndex(0);
                else if(rs.getString(7).equals("pediatric"))
                    department1.setSelectedIndex(1);
                else
                    department1.setSelectedIndex(2);
                doa.setText(rs.getString(8));
                doctor.setText(rs.getString(9));
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_searchActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorActionPerformed

    private void department1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_department1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_department1ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try
        {
            Connection con=DBClass.getConnection(); 
            int rownum=patienttable.getSelectedRow();        
            String id=patienttable.getValueAt(rownum, 0).toString();
            String str="update patient set name=?,age=?,sex=?,dob=?,cellphone=?,department=?,doa=?,doctor=? where idcard='"+id+"'";  
            PreparedStatement pst=con.prepareStatement(str);
            pst.setString(1, name.getText());
            pst.setInt(2, Integer.parseInt(age.getText()));
            pst.setString(3, sex.getSelectedItem().toString());
            pst.setString(4, dob.getText());
            pst.setString(5, cellphone.getText());
            pst.setString(6, department1.getSelectedItem().toString());
            pst.setString(7, doa.getText());
            pst.setString(8, doctor.getText());
            int rs=pst.executeUpdate();
            if(rs>0)
            {
                JOptionPane.showMessageDialog(this, "Update successfully");
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Not update successfully");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
      try{
        int rownum=patienttable.getSelectedRow();        
            String id=patienttable.getValueAt(rownum, 0).toString();
            String str="delete from patient where idcard='"+id+"'";
            Connection con=DBClass.getConnection();         
            Statement st=(Statement) con.createStatement();
            if(st.execute(str))
            JOptionPane.showMessageDialog(this, "Not Delete successfully");
            else
            JOptionPane.showMessageDialog(this, "Delete successfully");    
      }
      catch(Exception e)
      {
          JOptionPane.showMessageDialog(this, "Error");
      }
    }//GEN-LAST:event_deleteActionPerformed

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
         namesearch.removeAllItems();
        try
        {
            Connection con=DBClass.getConnection();
            String str="select name from patient where name like ?";
            PreparedStatement pst=con.prepareStatement(str);
            pst.setString(1, name.getText()+"%");
            ResultSet rs=pst.executeQuery();
             
            
            while(rs.next())
            {
                Object obj=new Object();
                obj=rs.getString(1);
                namesearch.addItem(obj);              
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_nameKeyReleased

    private void namesearchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_namesearchItemStateChanged
//        String item=evt.getItem().toString();
//        if(name.getText()!=item)
//        name.setText(item);
    }//GEN-LAST:event_namesearchItemStateChanged

    private void namesearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_namesearchFocusLost
        if(namesearch.getItemCount()!=0){
        String item=namesearch.getSelectedItem().toString();
        if(name.getText()!=item)
        name.setText(item);
        this.hide();}
    }//GEN-LAST:event_namesearchFocusLost

    private void jLabel1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1AncestorAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 this.dispose();
new Hospital_Management().show();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor_UpdateRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor_UpdateRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor_UpdateRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor_UpdateRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        Doctor_UpdateRegistration obj=new Doctor_UpdateRegistration();
        Thread th=new Thread(obj);
        th.start();
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
//                new UpdateRegistration().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age;
    private javax.swing.JTextField cellphone;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox department;
    private javax.swing.JComboBox department1;
    private javax.swing.JTextField doa;
    private javax.swing.JTextField dob;
    private javax.swing.JTextField doctor;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField name;
    private javax.swing.JComboBox namesearch;
    private javax.swing.JTable patienttable;
    private javax.swing.JButton search;
    private javax.swing.JComboBox sex;
    private javax.swing.JTextField tf;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        this.setVisible(true);
        while(true)
        {
            for(int i=0;i<380;i++)
            {
                try {
                    Thread.sleep(10);
                } catch (InterruptedException ex) {
                    
                }
                java.util.Date date=new java.util.Date();
                String str=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date);
                tf.setText(str);
                tf.setBounds(i, 10, 150, 30);
            }
            for(int i=380;i>=0;i--)
            {
                try {
                    Thread.sleep(10);
                } catch (InterruptedException ex) {
                    
                }
                java.util.Date date=new java.util.Date();
                String str=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(date);
                tf.setText(str);
                tf.setBounds(i, 10, 150, 30);
            }
        }
    }
}
