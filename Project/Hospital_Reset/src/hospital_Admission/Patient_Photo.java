/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital_Admission;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import java.sql.*;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author wolf
 */
public class Patient_Photo extends javax.swing.JFrame {

    /**
     * Creates new form PatientPhoto
     */
    public Patient_Photo() {
        initComponents();
        photo1.setBorder(BorderFactory.createLineBorder(Color.black));
        this.setResizable(false);
        this.setTitle("PatientPhoto");
        setLocationRelativeTo(null);
        idcard.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        photo = new javax.swing.JTextField();
        browse = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        idcard = new javax.swing.JTextField();
        department = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        patienttable = new javax.swing.JTable();
        photo1 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Photo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, -1));
        getContentPane().add(photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 169, -1));

        browse.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        browse.setText("Browse");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        getContentPane().add(browse, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, -1, -1));

        submit.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        jLabel2.setFont(new java.awt.Font("宋体", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("IDCard");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));
        getContentPane().add(idcard, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 170, -1));

        department.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        department.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SelectDepartment", "orthopedics", "pediatric", "dermatology" }));
        department.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                departmentItemStateChanged(evt);
            }
        });
        getContentPane().add(department, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 141, -1));

        patienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "IDCard", "Name"
            }
        ));
        patienttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                patienttableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(patienttable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 230, 93));

        photo1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        photo1.setForeground(new java.awt.Color(255, 0, 51));
        photo1.setText("(photo here)");
        getContentPane().add(photo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 120, 156));

        search.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setText("Tips 1.Select a department.");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, -1, -1));

        jLabel5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel5.setText("2.Then you will get some rows and select one of them");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, -1, -1));

        jLabel6.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel6.setText("4.You can insert you photo by clicking submit button");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, -1, -1));

        jLabel7.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel7.setText("3.You can see your photo by clicking search button");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, -1, -1));

        jButton1.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/desk5.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        JFileChooser fileChooser = new JFileChooser("C:\\", FileSystemView.getFileSystemView());
            fileChooser.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "png", "tif", "gif", "bmp"));
            int returnVal = fileChooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                String fileName = fileChooser.getSelectedFile().getName();
                String extension = fileName.substring(fileName.lastIndexOf("."));
                if (extension.equalsIgnoreCase(".jpg") || extension.equalsIgnoreCase(".png")
                        || extension.equalsIgnoreCase(".bmp") || extension.equalsIgnoreCase(".tif")
                        || extension.equalsIgnoreCase(".gif")) {
                    photo.setText(fileChooser.getSelectedFile().getPath());
                } else {
JOptionPane.showMessageDialog(this, "Kindly Select Image File Only","Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                photo.setText("No File Uploaded");
            }
    }//GEN-LAST:event_browseActionPerformed
 private void SaveImage(String imagePath) {
        try {
             Connection con = DBClass.getConnection();
            byte[] rawBytes = null;
           FileInputStream fis = null;

            if (imagePath.equals("No File Uploaded")) 
            {
               ClassLoader cl = this.getClass().getClassLoader();
                URL resouces = cl.getResource("resources/pic.jpg");
                imagePath = resouces.getFile();
            }

            File fileObj = new File(imagePath);
            fis = new FileInputStream(fileObj);
           
           
            PreparedStatement st = con.prepareStatement("insert into photo values(?,?)");
            st.setString(1, idcard.getText());
            //st.setBinaryStream(5, fis);
          int imageLength = Integer.parseInt(String.valueOf(fileObj.length()));
           rawBytes = new byte[imageLength];
            fis.read(rawBytes, 0, imageLength);
          // st.setBinaryStream(5, (InputStream) fis, imageLength);
           st.setBytes(2, rawBytes);
            int count = st.executeUpdate();
            if (count > 0) {
                JOptionPane.showMessageDialog(this, "Data Saved Successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Error Saving Data");
            }
        } catch (Exception ex) {
            //JOptionPane.showMessageDialog(this,ex.getMessage().toString());
            System.out.println(ex);
        }
    }

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        SaveImage(photo.getText());
    }//GEN-LAST:event_submitActionPerformed

    private void departmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_departmentItemStateChanged
        patienttable.removeAll();
        String item = evt.getItem().toString();
        try {
            if (item.equals("orthopedics")) {
                patienttable.removeAll();
                Connection con = DBClass.getConnection();
                String str = "select * from patient where department='orthopedics'";
                Statement st = (Statement) con.createStatement();
                ResultSet rs = st.executeQuery(str);
                DefaultTableModel tm = (DefaultTableModel) patienttable.getModel();
                tm.setRowCount(0);
                while (rs.next()) {
                    String[] a = new String[2];
                    for (int s = 0; s < 2; s++) {
                        a[s] = rs.getString(s + 1);
                    }
                    tm.addRow(a);
                }
                tm.fireTableDataChanged();
            } else if (item.equals("pediatric")) {
                patienttable.removeAll();
                Connection con = DBClass.getConnection();
                String str = "select * from patient where department='pediatric'";
                Statement st = (Statement) con.createStatement();
                ResultSet rs = st.executeQuery(str);
                DefaultTableModel tm = (DefaultTableModel) patienttable.getModel();
                tm.setRowCount(0);
                while (rs.next()) {
                    String[] a = new String[2];
                    for (int s = 0; s < 2; s++) {
                        a[s] = rs.getString(s + 1);
                    }
                    tm.addRow(a);
                }
                tm.fireTableDataChanged();
            } else if (item.equals("dermatology")) {
                patienttable.removeAll();
                Connection con = DBClass.getConnection();

                String str = "select * from patient where department='dermatology'";
                Statement st = (Statement) con.createStatement();
                ResultSet rs = st.executeQuery(str);
                DefaultTableModel tm = (DefaultTableModel) patienttable.getModel();
                tm.setRowCount(0);
                while (rs.next()) {
                    String[] a = new String[2];
                    for (int s = 0; s < 2; s++) {
                        a[s] = rs.getString(s + 1);
                    }
                    tm.addRow(a);
                }
                tm.fireTableDataChanged();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error");
        }
    }//GEN-LAST:event_departmentItemStateChanged

    private void patienttableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patienttableMouseReleased
        if(patienttable.getSelectedRowCount()>0)
        {int rownum=patienttable.getSelectedRow();        
        String id=patienttable.getValueAt(rownum, 0).toString();
        idcard.setText(id);
        
        }
    }//GEN-LAST:event_patienttableMouseReleased

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        try {
            Connection con = DBClass.getConnection();
            String str = "select picture from photo where idcard=?";
            PreparedStatement pst = con.prepareStatement(str);
            pst.setString(1, idcard.getText());
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                
                ImageIcon icon = new ImageIcon(rs.getBytes(1));
                icon.setImage(icon.getImage().getScaledInstance(120, 200, Image.SCALE_DEFAULT));
                photo1.setSize(100, 100);
                photo1.setIcon(icon);
            }
           else
            {
                
                throw new Exception("He/She doesn't have photo.");
            
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_searchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();
new Hospital_Management().show();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patient_Photo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patient_Photo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patient_Photo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patient_Photo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Patient_Photo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse;
    private javax.swing.JComboBox department;
    private javax.swing.JTextField idcard;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patienttable;
    private javax.swing.JTextField photo;
    private javax.swing.JLabel photo1;
    private javax.swing.JButton search;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
